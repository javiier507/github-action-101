name: Demo Github Action

on:
  pull_request:
    branches:
      - master
  push:
    tags:
      - 'v*.*.*'

env:
  IMAGE_NAME: github-action-demo-api
  IMAGE_VERSION: ${{ vars.IMAGE_VERSION }}

jobs:
  test:
    runs-on: ubuntu-22.04
    container:
      image: node:18
    steps:
      - uses: actions/checkout@v2
      - name: Add Environment Variables
        run: |
          echo PORT=${{ vars.PORT }} >> .env
          echo APP_KEY=${{ vars.APP_KEY }} >> .env
          echo DRIVE_DISK=${{ vars.DRIVE_DISK }} >> .env
      - name: Install & Tests
        run: npm install && npm test

  delivery:
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Set Name and Version for Dev and Staging
        if: ${{ github.event_name == 'pull_request' && github.event.action == 'opened' }}
        run: |
          echo "IMAGE_NAME=${{ env.IMAGE_NAME }}-dev"
      - name: Set Name and Version for Production
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "IMAGE_NAME=${{ env.IMAGE_NAME }}-prod"
          echo "IMAGE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Print Name and Version
        run: echo "${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}"
      - name: Docker Build
        run: docker build -t ${{ env.IMAGE_NAME }} .
      - name: Docker Tag
        run: |
          docker tag ${{ env.IMAGE_NAME }} ${{ secrets.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}
          docker tag ${{ env.IMAGE_NAME }} ${{ secrets.DOCKER_USER }}/${{ env.IMAGE_NAME }}:latest
      - name: Docker Push
        run: |
          docker push ${{ secrets.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}
          docker push ${{ secrets.DOCKER_USER }}/${{ env.IMAGE_NAME }}:latest

  deploy-dev:
    runs-on: ubuntu-22.04
    needs: delivery
    environment: Dev
    steps:
      - name: Deploy
        run: echo "Deploy in Dev!"

  e2e-dev:
    runs-on: ubuntu-22.04
    needs: deploy-dev
    environment: Dev
    steps:
      - name: E2E Test
        run: echo "E2E Test in Dev!"

  deploy-staging:
    runs-on: ubuntu-22.04
    needs: e2e-dev
    environment: Staging
    steps:
      - name: Deploy
        run: echo "Deploy in Staging!"

  e2e-staging:
    runs-on: ubuntu-22.04
    needs: deploy-staging
    environment: Staging
    steps:
      - name: E2E Test
        run: echo "E2E Test in Staging!"
