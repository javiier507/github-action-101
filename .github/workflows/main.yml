name: Demo Github Action

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - closed

jobs:
  build:
    runs-on: ubuntu-22.04
    env:
      PORT: ${{ vars.PORT }}
      APP_KEY: ${{ vars.APP_KEY }}
      DRIVE_DISK: ${{ vars.DRIVE_DISK }}
    outputs:
      version: ${{ steps.versioning.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: CI
        run: npm ci --legacy-peer-deps
      - name: Test
        run: npm test
      - name: Get Version
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> "$GITHUB_ENV"
      - name: Print Version
        run: echo "${{ env.VERSION }}"
      - name: Check Version
        run: |
          git fetch --tags
          echo "Current Tag: $(git describe --tags --abbrev=0)"
          if [ $(git describe --tags --abbrev=0) != ${{ env.VERSION }} ]; then echo "Label and current version do not match"; exit 1; fi
      - id: versioning
        name: Save Version
        run: echo "version=${{ env.VERSION }}" >> "$GITHUB_OUTPUT"

  delivery:
    runs-on: ubuntu-22.04
    needs: build
    if: ${{ startsWith(github.head_ref, 'deploy/') && github.event.pull_request.merged == true }}
    env:
      IMAGE_NAME: ${{ vars.IMAGE_NAME }}
      IMAGE_TAG: ${{ needs.build.outputs.version }}
    steps:
      # - name: Set Image Name and Tag for Dev and Staging
      #   if: github.head_ref == 'deploy/dev'
      #   run: |
      #     echo "IMAGE_TAG=$GITHUB_SHA" >> $GITHUB_ENV
      - name: Print Name and Tag
        run: echo "${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"

  deploy-dev:
    runs-on: ubuntu-22.04
    needs: delivery
    if: github.head_ref == 'deploy/dev'
    environment:
      name: Dev
      url: 'https://environment.dev'
    steps:
      - name: Deploy
        run: echo "Deploy in Dev!"

  e2e-dev:
    runs-on: ubuntu-22.04
    needs: deploy-dev
    environment: Dev
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Install
        run: npm ci --legacy-peer-deps
      - name: Test
        run: npm run e2e
      - name: Reporter
        run: npm run e2e:reporter
      - name: Store Artifact
        uses: actions/upload-artifact@v3
        with:
          name: reporter
          path: newman
          retention-days: 1

  deploy-staging:
    runs-on: ubuntu-22.04
    needs: e2e-dev
    environment:
      name: Staging
      url: 'https://environment.staging'
    steps:
      - name: Deploy
        run: echo "Deploy in Staging!"

  e2e-staging:
    runs-on: ubuntu-22.04
    needs: deploy-staging
    environment: Staging
    steps:
      - name: E2E Test
        run: echo "E2E Test in Staging!"

  deploy-prod:
    runs-on: ubuntu-22.04
    needs: delivery
    if: github.head_ref == 'deploy/prod'
    environment:
      name: Production
      url: 'https://environment.prod'
    steps:
      - name: Deploy
        run: echo "Deploy in Production!"
